// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run `zed: open default settings` from the
// command palette (cmd-shift-p / ctrl-shift-p)
{
  "agent": {
    "profiles": {
      "ask": {
        "name": "Ask",
        "tools": {
          "symbol_info": true,
          "open": true,
          "diagnostics": true,
          "fetch": true,
          "list_directory": true,
          "now": true,
          "find_path": true,
          "read_file": true,
          "grep": true,
          "thinking": true
        },
        "enable_all_context_servers": false,
        "context_servers": {}
      },
      "admin": {
        "name": "admin",
        "tools": {
          "thinking": true,
          "symbol_info": true,
          "grep": true,
          "read_file": true,
          "find_path": true,
          "open": true,
          "now": true,
          "list_directory": true,
          "move_path": true,
          "edit_file": true,
          "fetch": true,
          "diagnostics": true,
          "delete_path": true,
          "create_file": true,
          "create_directory": true,
          "copy_path": true,
          "code_symbols": true,
          "batch_tool": true,
          "terminal": true
        },
        "enable_all_context_servers": false,
        "context_servers": {}
      }
    },
    "default_profile": "write",
    "always_allow_tool_actions": true,
    "default_model": {
      "provider": "anthropic",
      "model": "claude-sonnet-4-thinking-latest"
    },
    "version": "2"
  },
  "ui_font_size": 12,
  "buffer_font_size": 12.5,
  "tab_size": 2,
  "show_completions_on_input": true,
  "remove_trailing_whitespace_on_save": true,

  "base_keymap": "JetBrains",
  "restore_on_startup": "last_session",
  "buffer_font_fallbacks": ["D2CodingLigature Nerd Font"],
  "vim_mode": false,
  "load_direnv": "shell_hook",

  "git": {
    "inline_blame": {
      "enabled": true,
      "delay_ms": 500,
      "show_commit_summary": true
    }
  },

  "features": {
    "edit_prediction_provider": "zed"
  },
  // korean support
  "ui_font_fallbacks": ["D2CodingLigature Nerd Font"],

  "file_types": {
    "Dockerfile": ["Dockerfile", "Dockerfile.*"],
    "JSON": ["json", "jsonc", "*.code-snippets"],
    "HEEX": ["heex"],
    "Elixir": ["ex", "exs"]
  },
  // 이 설정은 파일 확장자와 언어 모드를 연결합니다
  "associations": {
    "*.ex": "elixir",
    "*.exs": "elixir",
    "*.heex": "heex",
    "*.eex": "html"
  },

  "theme": {
    "mode": "system",
    "light": "Catppuccin Frappé",
    "dark": "Catppuccin Macchiato"
  },

  "auto_install_extensions": {
    "html": true,
    "dockerfile": true,
    "docker-compose": true,
    "catppuccin": true,
    "nix": true,
    "toml": true,
    "sql": true,
    "elixir": true,
    "emmet": true,
    "env": true,
    "gleam": true,
    "justfile": true,
    "haskell": true,
    "kdl": true,
    "fish": true,
    "git-firefly": true,
    "xml": true,
    "make": true,
    "Luau": true
  },
  "language_models": {
    "ollama": {
      "api_url": "http://localhost:11434",
      "available_models": [
        {
          "name": "deepseek-r1:32b",
          "display_name": "deepseek-r1:32b",
          "max_tokens": 32768333
        },
        {
          "name": "deepseek-r1:7b",
          "display_name": "deepseek-r1:7b",
          "max_tokens": 32768333
        }
      ]
    }
  },
  "chat_panel": {
    "dock": "left"
  },

  "buffer_font_features": {
    "calt": false
  },
  "project_panel": {
    "auto_fold_dirs": false,
    "indent_size": 16,
    "git_status": true
  },
  "lsp": {
    "biome": {
      "settings": {
        "require_config_file": true
      }
    },
    "nixd": {
      "settings": {}
    },

    "elixir-ls": {
      "settings": {
        "dialyzerEnabled": true,
        "incrementalDialyzer": true,
        "suggestSpecs": true,
        "signatureHelp": true,
        "fetchDeps": true,
        "signatureAfterComplete": true,
        "enableHEExFormatter": true
      }
    },
    "emmet-language-server": {
      "settings": {
        "emmet": {
          "includeLanguages": {
            "elixir": "html",
            "heex": "html",
            "phoenix-heex": "html"
          },
          "showExpandedAbbreviation": "always",
          "showSuggestionsAsSnippets": true
        }
      }
    },
    "eslint": {
      "settings": {
        "codeActionOnSave": {
          "rules": ["import/order"]
        }
      }
    },
    "html-language-server": {
      "settings": {
        "html": {
          "includeLanguages": {
            "heex": "html",
            "elixir": "html"
          },
          "autoClosingTags": true,
          "autoCreateQuotes": true
        }
      }
    },
    "tailwindcss-language-server": {
      "settings": {
        "classFunctions": ["tw", "clsx", "cx", "tva", "twMerge", "cva", "cn"],
        "classAttributes": ["className", "class"],
        "emmetCompletions": true,
        "includeLanguages": {
          "phoenix-heex": "html",
          "javascript": "javascript",
          "typescript": "javascript",
          "javascriptreact": "javascript",
          "typescriptreact": "javascript"
        },
        "classRegex": [
          ["cva\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
          ["tva\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
          ["cn\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
          ["clsx\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
          ["twMerge\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"]
        ]
      }
    },
    "luau-lsp": {
      "settings": {
        "luau-lsp": {
          "inlayHints": {
            "parameterNames": "all"
          }
        }
      }
    }
  },
  "languages": {
    "JavaScript": {
      "formatter": { "language_server": { "name": "biome" } },
      "code_actions_on_format": {
        "source.fixAll.eslint": true,
        "source.action.useSortedKeys.biome": true,
        "source.fixAll.biome": true
      }
    },
    "TypeScript": {
      "formatter": { "language_server": { "name": "biome" } },
      "code_actions_on_format": {
        "source.fixAll.eslint": true,
        "source.action.useSortedKeys.biome": true,
        "source.fixAll.biome": true
      }
    },
    "TSX": {
      "formatter": { "language_server": { "name": "biome" } },
      "code_actions_on_format": {
        "source.fixAll.eslint": true,
        "source.action.useSortedKeys.biome": true,
        "source.fixAll.biome": true
      }
    },

    "JSON": { "formatter": { "language_server": { "name": "biome" } } },
    "JSONC": { "formatter": { "language_server": { "name": "biome" } } },
    "CSS": { "formatter": { "language_server": { "name": "biome" } } },
    "Luau": {
      "formatter": {
        "external": {
          "command": "stylua",
          "arguments": ["--stdin-filepath", "{buffer_path}", "-"]
        }
      }
    },
    "Elixir": {
      "show_edit_predictions": true,
      "show_whitespaces": "selection",
      "language_servers": [
        "elixir-ls",
        "html-language-server",
        "tailwindcss-language-server"
      ],
      "format_on_save": {
        "external": {
          "command": "mix",
          "arguments": ["format", "--stdin-filename", "{buffer_path}", "-"]
        }
      },
      // ~H sigil 내의 HTML 인식을 위한 설정
      "embedded_languages": {
        "~H": "html",
        "heex": "html"
      }
    },
    "HEEX": {
      "show_edit_predictions": true,
      "show_whitespaces": "selection",
      "format_on_save": {
        "external": {
          "command": "mix",
          "arguments": ["format", "--stdin-filename", "{buffer_path}", "-"]
        }
      },
      "language_servers": [
        "html-language-server",
        "elixir-ls",
        "tailwindcss-language-server",
        "emmet-language-server"
      ]
    },
    "Nix": {
      "language_servers": ["nixd", "!nil"],
      "formatter": {
        "external": {
          "command": "nixfmt",
          "arguments": []
        }
      }
    }
  },
  "context_servers": {}
}
